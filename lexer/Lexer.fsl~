{
(***

   All code between the two curly braces will be spit directly into

   the generated code file.

***)

module Lexer

open System


// Open our module which defines the token types

open Tokens

// These two modules define goo needed to use fslex

open Lexing

}


// Base regular expressions

let digit = ['0'-'9']

let whitespace = [' ' '\t' ]

let newline = ('\n' | '\r' '\n')

 

rule parsetokens = parse

// ----------------------------

| whitespace      { parsetokens lexbuf }

| newline         {  parsetokens lexbuf }

// ----------------------------

| ['-']?digit+  { INT (Int32.Parse(lexeme lexbuf)) }

| ['-']?digit+('.'digit+)?(['e''E']digit+)?   { FLOAT (Double.Parse(lexeme lexbuf)) }

// ----------------------------

| "pi"            { PI }

| "e"             { E }

// ----------------------------

| "sin"           { SIN }

| "cos"           { COS }

| "tan"           { TAN }

// ----------------------------

| "+"             { PLUS }

| "-"             { DASH }

| "*"             { ASTERISK }

| "/"             { SLASH }

| "^"             { CARET }

| "("             { LPAREN }

| ")"             { RPAREN }

// ----------------------------

| eof             { EOF }
